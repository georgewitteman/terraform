name: Terraform

"on":
  pull_request:
  push: { branches: [master] }

permissions:
  # This is required for requesting the JWT for OIDC
  id-token: write
  # Required for actions/checkout
  contents: read
  # Required to leave a comment on a pull request
  pull-requests: write

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    concurrency: tf_state_lock
    env:
      DNSIMPLE_ACCOUNT: ${{ secrets.DNSIMPLE_ACCOUNT }}
      DNSIMPLE_TOKEN: ${{ secrets.DNSIMPLE_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsOIDC
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `**Terraform Format and Styleüñå** \`${{ steps.fmt.outcome }}\`
            **Terraform Initialization ‚öôÔ∏è\** \`${{ steps.init.outcome }}\`
            **Terraform Plan üìñ** \`${{ steps.plan.outcome }}\`
            **Terraform Validation ü§ñ** \`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform apply
        id: apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
